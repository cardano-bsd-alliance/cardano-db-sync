name: Haskell CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    env:
      # From cardano-base
      # see https://github.com/input-output-hk/cardano-base/blob/master/.github/workflows/haskell.yml
      SECP256K1_REF: ac83be33d0956faf6b7f61a60ab524ef7d6a473a
      PKG_CONFIG_PATH: ${{ matrix.os == 'macos-latest' && '/usr/local/opt/postgresql@14/lib/postgresql@14/pkgconfig:/usr/local/opt/openssl/lib/pkgconfig' || '' }}

    strategy:
      fail-fast: false
      matrix:
        cabal: ["3.4"]
        ghc: ["8.10.7"]
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Select build directory
      run: |
        echo "$HOME/.cabal/bin"                 >> $GITHUB_PATH

    - name: Install Postgres (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev libpq5 net-tools postgresql
        sudo pg_ctlcluster 14 main start

    - name: Install Postgres support (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install postgresql@14 libpq openssl@1.1
        brew services start postgresql
        sudo mkdir -p /var/run/postgresql/
        sudo ln -s /tmp/.s.PGSQL.5432 /var/run/postgresql/.s.PGSQL.5432

    - name: Check if postgres is running
      run: |
        sleep 20
        netstat -an
        ls -al /var/run/postgresql/.s.PGSQL.5432 || true
        ls -al || true

    - name: Install libsodium
      if: matrix.os == 'macos-latest'
      run: brew install libsodium

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Haskell versions
      run: |
        ghc --version
        cabal --version

    - name: Install build environment
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libsodium23 libsodium-dev
        sudo apt-get -y install libsystemd0 libsystemd-dev
        sudo apt-get -y remove --purge software-properties-common
        sudo apt-get -y autoremove

    - name: Install secp256k1 (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get -y install autoconf automake libtool
        ./scripts/secp256k1-setup.sh $SECP256K1_REF

    - name: Install secp256k1 (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install autoconf automake libtool
        ./scripts/secp256k1-setup.sh $SECP256K1_REF

    - name: Cabal update
      run: cabal update

    - name: Cabal Configure
      run: cabal configure --write-ghc-environment-files=always

    - name: Configure to use libsodium
      run: |
        cat >> cabal.project.local <<EOF
        package cardano-crypto-praos
          flags: -external-libsodium-vrf
        EOF

    - name: Record dependencies
      run: |
        cat dist-newstyle/cache/plan.json | jq -r '."install-plan"[].id' | sort > dependencies.txt

    - uses: actions/cache@v2
      name: Cache cabal store
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-cabal-store-v1-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
        restore-keys: |
          cache-cabal-store-v1-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
          cache-cabal-store-v1-${{ runner.os }}-${{ matrix.ghc }}-

    - name: Build dependencies Linux
      if: matrix.os == 'ubuntu-latest'
      run: cabal build all --only-dependencies

    - name: Build dependencies OSX
      if: matrix.os == 'macos-latest'
      run: |
        cabal build all --only-dependencies

    - name: Build
      run: cabal build all

    - name: Set up database user (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo -u postgres createuser --createdb --superuser runner

    - name: Set up database
      run: |
        cardano_db_sync_exe="$(cat dist-newstyle/cache/plan.json | jq -r '."install-plan"[] | select(."component-name" == "exe:cardano-db-sync") | ."bin-file"' | head)"

        echo "Executable found at: $cardano_db_sync_exe"
        chmod 600 config/pgpass-mainnet
        chmod 600 cardano-chain-gen/test/testfiles/pgpass-testing

        PGPASSFILE=config/pgpass-mainnet scripts/postgresql-setup.sh --createdb
        PGPASSFILE=cardano-chain-gen/test/testfiles/pgpass-testing scripts/postgresql-setup.sh --createdb

    - name: Run tests
      run: cabal test all -j1
